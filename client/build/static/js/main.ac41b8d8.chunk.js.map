{"version":3,"sources":["auth/SignOut.js","Header/Nav.js","Header/SearchResults.js","Header/Header.js","Slider/Slide.js","PopularMovies/PopularMovies.js","MovieStats.js","Slider2/Slider2.js","Dropdown/Dropdown.js","Footer/NewsLetter.js","Footer/Legal.js","Footer/Footer.js","MovieRating.js","DetailsPage/DetailsPage.js","ResultsPage/Results.js","DetailsPage/Episode/EpisodeBlock.js","DetailsPage/SingleSeason/Season.js","auth/Register.js","auth/Login.js","App.js","index.js"],"names":["SignOut","userData","logoutHandler","closeMenu","signOutUser","e","a","axios","method","url","data","JSON","stringify","headers","then","res","catch","err","className","to","onClick","Nav","key","useState","genre","setGenre","setData","movieGenreUrl","tvGenreUrl","pathname","window","location","getGenres","fetch","response","json","genres","status","preventDefault","map","includes","name","id","SearchResults","item","style","background","poster_path","title","release_date","Header","authenticated","menu","setMenu","search","setSearch","query","setQuery","wrapperRef","useRef","watching","setWatching","console","log","useHistory","menuClickHandler","searchClickHandler","watchClickHandler","debouncedSave","useCallback","debounce","fetchData","movies","results","onChange","value","target","firstName","ref","type","placeholder","SwiperCore","use","Navigation","Pagination","Autoplay","Slide","props","tv","movie","useEffect","mounted","getSliderMovies","spaceBetween","autoplay","pagination","clickable","scrollbar","draggable","loop","index","overview","Popular","getPopularMovies","Stats","rating","stat","heartClicked","setHeartClicked","thumbClicked","setThumbClicked","Slider2","getNewReleases","navigation","Dropdown","clicked","setClicked","similarMovie","similarTv","upcoming","getdropDown","MovieStats","vote_average","NewsLetter","setKey","onKeyPress","event","setTimeout","action","Legal","Footer","footerMenu","setFooterMenu","state","MovieRating","click","setClick","starsSelected","setStarsSelected","setToken","ratingText","setRatingText","token","guest_session_id","fetchToken","button","submitHandler","Array","totalStars","n","i","change","SingleMovie","match","params","seasons","tvUrl","movieUrl","scrollTo","movieRuntime","Math","floor","runtime","tvRuntime","episode_run_time","clickHandler","movieGenres","parseInt","popularity","tagline","href","homepage","first_air_date","season","season_number","seasonNumber","Results","getGenreResults","Episode","episodes","episode","episode_number","still_path","air_date","Season","seasonsUrl","fetchSeasons","EpisodeBlock","Register","error","setError","setStatus","lastName","email","password","newUser","setNewUser","onChangeHandler","registerUser","signInPromt","required","withRouter","loginText","setLoginText","userActive","loginUser","setUserData","setAuthenticated","display","history","push","loginPromt","App","exact","path","PopularMovies","component","DetailsPage","render","Seasons","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac41b8d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\n\nconst SignOut = ({ userData, logoutHandler, closeMenu }) => {\n    // Sign out user\n    const signOutUser = async e => {\n\n        await axios({\n            method: 'POST',\n            url: '/api/logout',\n            data: JSON.stringify(userData.data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            return res;\n        }).catch(err => {\n            throw new err\n        })\n    }\n\n\n    return <li className=\"nav-link\"><Link to=\"/\" onClick={(e) => {\n        signOutUser();\n        logoutHandler();\n        closeMenu();\n    }}>Log out</Link>\n    </li>\n\n}\n\nexport default SignOut;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOut from '../auth/SignOut'\n\n\nconst Nav = ({ userData, closeMenu, logoutHandler }) => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [genre, setGenre] = useState(false);\n    const [data, setData] = useState([]);\n    const movieGenreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n    const tvGenreUrl = `https://api.themoviedb.org/3/genre/tv/list?api_key=${key}&language=en-US`\n    const pathname = window.location.pathname;\n\n\n    const getGenres = async e => {\n        const response = await fetch(genre ? movieGenreUrl : tvGenreUrl);\n        const genres = await response.json()\n        setData(genres.genres)\n    }\n\n    const genreHandler = () => {\n        setGenre(!genre)\n        getGenres()\n    }\n\n\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-link\"><Link to=\"/\" onClick={closeMenu}>Home</Link><i onClick={closeMenu} className=\"fas fa-times\"></i></li>\n            {userData.status === 200\n                ? <SignOut userData={userData} logoutHandler={logoutHandler} closeMenu={closeMenu} />\n                :\n                <li className=\"nav-link\"><Link to=\"/api/account\" onClick={closeMenu}>Log in</Link></li>\n            }\n            <li className=\"nav-link\"><Link to=\"/api/account\" onClick={closeMenu}>Register</Link></li>\n            <li onClick={(e) => {\n                e.preventDefault();\n                genreHandler();\n            }} className=\"genre-dropdown nav-link\">\n                {pathname === '/' ? 'Movie genres' : 'TV genres'}\n                <i className={genre ? 'fas fa-caret-up rotate' : 'fas fa-caret-up'}></i>\n            </li>\n            <ul className={genre ? 'genres-menu open' : 'genres-menu'}>\n                {data.map(genres => {\n                    return <Link to={{ pathname: pathname.includes('/tv/') ? `/tv/genres/${genres.name}` : `/genres/${genres.name}` }} key={genres.id} onClick={closeMenu}>{genres.name}</Link>\n                })}\n            </ul>\n        </ul>\n    )\n}\n\nexport default Nav;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SearchResults = ({ data, closeMenu }) => {\n    const pathname = window.location.pathname;\n\n    return (\n        <div className=\"list\">\n            <ul>\n                {data.map(item => {\n                    return (\n                        <Link to={{ pathname: pathname.includes('/tv/') ? `/tv/${item.id}` : `/${item.id}` }}\n                            className=\"list-item\"\n                            key={item.id}\n                            onClick={closeMenu}\n                        >\n                            <div className=\"list-item_img\"\n                                style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                            ></div>\n                            <div className=\"list-item_text\">\n                                <h4>{item.title}</h4>\n                                <p>{item.release_date}</p>\n                            </div>\n                        </Link>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchResults;","import React, { useState, useRef, useCallback } from 'react';\nimport { useHistory, Link } from 'react-router-dom'\nimport Nav from './Nav';\nimport SearchResults from './SearchResults';\nimport debounce from 'lodash.debounce';\n\nconst Header = ({ authenticated, userData, logoutHandler }) => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [menu, setMenu] = useState(false)\n    const [search, setSearch] = useState(false)\n    const [query, setQuery] = useState('')\n    const [data, setData] = useState([])\n    const wrapperRef = useRef(null);\n    const [watching, setWatching] = useState(false)\n    const pathname = window.location.pathname;\n    console.log(pathname)\n    const history = useHistory();\n\n\n\n    // State to open and close menu's\n    const menuClickHandler = () => {\n        setMenu(!menu)\n    }\n    const searchClickHandler = () => {\n        setSearch(!search)\n    }\n    const watchClickHandler = () => {\n        setWatching(!watching)\n    }\n\n    const debouncedSave = useCallback(\n        debounce(query => fetchData(query), 1000),\n        [],\n    );\n\n    // Data call\n    const fetchData = async query => {\n        const response = await fetch(`https://api.themoviedb.org/3/search/multi?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`);\n        const movies = await response.json()\n        setData(movies.results)\n        return;\n    };\n    // Setting query with setTimeout then fetching data to minimise http requests\n    const onChange = async e => {\n        const value = e.target.value;\n        setQuery(value)\n        debouncedSave(query)\n    }\n\n\n    return (\n        <div className=\"header\">\n            {/* <div\n                onClick={(e) => history.goBack()}>\n                <i className=\"fas fa-home\" style={{ marginRight: '10px' }}></i>\n            </div> */}\n            <div className=\"logo\">\n                <Link to=\"/\">\n                    <i className=\"fas fa-home\"></i>\n                    {authenticated ? `Welcome ${userData.data.firstName}` : 'ProShowz'}\n                </Link>\n            </div>\n\n            <div className=\"mobile-nav\">\n                <i className=\"fas fa-search\" onClick={searchClickHandler}></i>\n                <div className=\"burger-menu\" onClick={menuClickHandler}><i className={authenticated ? 'fas fa-user-circle' : 'fas fa-bars'}></i></div>\n            </div>\n\n            <div ref={wrapperRef} className={menu ? 'mobile-menu mobile' : 'mobile-menu'}><Nav userData={userData} closeMenu={menuClickHandler} logoutHandler={logoutHandler} /></div>\n\n            <div className={search ? 'show-search search' : 'show-search'} >\n                <input ref={wrapperRef} type=\"search\" value={query} onChange={(e) => onChange(e)} placeholder=\"Search...\" />\n                <i onClick={fetchData} className=\"fas fa-arrow-circle-right\"></i>\n                <SearchResults data={data} closeMenu={searchClickHandler} />\n            </div>\n            <div className=\"app-routes\">\n                <Link to=\"/\" className={watching ? \"app-routes_movies app-routes_active\" : \"app-routes_movies\"} onClick={watchClickHandler}>Movies</Link>\n                <Link to=\"/tv/\" className=\"app-routes_tv\" onClick={watchClickHandler}>TV</Link>\n            </div>\n\n        </div >\n    )\n}\n\n\nexport default Header;","import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from \"react-router-dom\";\n// core version + navigation, pagination modules:\nimport SwiperCore, { Navigation, Pagination, Autoplay } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport '../App.css';\n// configure Swiper to use modules\nSwiperCore.use([Navigation, Pagination, Autoplay]);\n\n\n\n\nconst Slide = (props) => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [data, setData] = useState([])\n    const tv = `https://api.themoviedb.org/3/tv/popular?api_key=${key}&language=en-US&page=1`\n    const movie = `https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=1`\n    const pathname = window.location.pathname;\n\n\n    useEffect(() => {\n        // Fetch call\n        let mounted = true;\n        if (mounted) {\n            async function getSliderMovies() {\n                const response = await fetch(pathname === '/' ? movie : tv);\n                const movies = await response.json()\n                setData(movies.results)\n            }\n            getSliderMovies()\n        }\n\n\n        // Clean up\n        return () => {\n            mounted = false;\n        }\n    }, [pathname, movie, tv])\n\n\n\n    return (\n        <Swiper\n            spaceBetween={50}\n            autoplay={true}\n            // navigation\n            pagination={{ clickable: true }}\n            scrollbar={{ draggable: true }}\n            loop={true}\n        >\n\n            {data.map((item, index) => {\n                return (\n\n                    <SwiperSlide key={item.id} style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                    >\n                        <Link to={{ pathname: pathname.includes('/tv/') ? `/tv/${item.id}` : `/${item.id}` }} key={index}\n                        >\n\n\n                            <div className=\"center\" >\n                                <h2>{pathname === '/' ? item.title : item.name}</h2>\n                                <p>{item.overview}</p>\n                            </div>\n                        </Link>\n                    </SwiperSlide>\n\n                )\n            })}\n      ...\n        </Swiper>\n    )\n}\n\nexport default Slide;","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst Popular = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [data, setData] = useState([]);\n    const tv = `https://api.themoviedb.org/3/tv/popular?api_key=${key}&language=en-US&page=2`\n    const movie = `https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=2`;\n\n    const pathname = window.location.pathname;\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            const getPopularMovies = async () => {\n                const response = await fetch(pathname === '/' ? movie : tv);\n                const movies = await response.json()\n                setData(movies.results)\n            };\n            getPopularMovies();\n        }\n\n\n        return () => {\n            mounted = false;\n        }\n    }, [pathname, movie, tv])\n\n\n\n\n    return (\n        <div className=\"popular-container\">\n            <h2>{props.title}</h2>\n            <div className=\"popular-container_movies\">\n                {data.map((item, index) => {\n                    return (\n                        <Link to={{\n                            pathname: `${pathname}${item.id}`\n                        }}\n                            key={index}\n                            className=\"popular-container_movies-item\"\n                            style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                        >\n\n                        </Link>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Popular;","import React, { useState } from 'react';\n\n\n\nconst Stats = (props) => {\n    const rating = props.stat;\n    const [heartClicked, setHeartClicked] = useState(false)\n    const [thumbClicked, setThumbClicked] = useState(false)\n\n    const heartClickHandler = () => {\n        setHeartClicked(!heartClicked)\n    }\n    const thumbClickHandler = () => {\n        setThumbClicked(!thumbClicked)\n    }\n\n    return (\n        <div className=\"stats\">\n            <div className=\"rating\">\n                <i onClick={thumbClickHandler} className={thumbClicked ? 'pulse-active fas fa-thumbs-up' : 'fas fa-thumbs-up'}></i>\n                <p>{rating}/10</p>\n            </div>\n            <div className=\"favorite\">\n                <i onClick={heartClickHandler} className={heartClicked ? 'pulse-active fas fa-heart' : 'fas fa-heart'}></i>\n            </div>\n        </div>\n    )\n}\n\nexport default Stats;","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport MovieStats from '../MovieStats';\n\nimport SwiperCore, { Navigation, Pagination, Autoplay } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport '../App.css';\n// configure Swiper to use modules\nSwiperCore.use([Navigation, Pagination, Autoplay]);\n\nconst Slider2 = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [data, setData] = useState([]);\n    const tv = `https://api.themoviedb.org/3/tv/top_rated?api_key=${key}&language=en-US&page=1`\n    const movie = `https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`\n\n    const pathname = window.location.pathname;\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            async function getNewReleases() {\n                const response = await fetch(pathname === '/' ? movie : tv);\n                const movies = await response.json()\n                setData(movies.results)\n            }\n            getNewReleases()\n        }\n\n        return () => {\n            mounted = false;\n        }\n    }, [pathname, movie, tv])\n\n\n    return (\n        <>\n            <h2>{props.title}</h2>\n            <Swiper\n                spaceBetween={50}\n                autoplay={true}\n                navigation\n                pagination={{ clickable: true }}\n                scrollbar={{ draggable: true }}\n            >\n\n                {data.map((item, index) => {\n                    return (\n                        <SwiperSlide key={index}\n                            style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                            key={index}\n                        >\n                            <Link to={{\n                                pathname: `${pathname}${item.id}`\n                            }}>\n\n                                <div className=\"center\">\n                                    <h2>{pathname === '/' ? item.title : item.name}</h2>\n                                    <p>{item.overview}</p>\n                                </div>\n                            </Link>\n                        </SwiperSlide>\n                    )\n                })}\n            </Swiper>\n        </>\n    )\n}\n\nexport default Slider2;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieStats from '../MovieStats';\n\n\nconst Dropdown = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [clicked, setClicked] = useState(false)\n    const [data, setData] = useState([])\n    const similarMovie = `https://api.themoviedb.org/3/movie/${props.id}/similar?api_key=${key}&language=en-US&page=1`;\n    const similarTv = `https://api.themoviedb.org/3/tv/${props.id}/similar?api_key=${key}&language=en-US&page=1`;\n    const upcoming = `https://api.themoviedb.org/3/movie/upcoming?api_key=${key}&language=en-US&page=1`;\n    const tv = `https://api.themoviedb.org/3/tv/popular?api_key=${key}&language=en-US&page=3`\n\n    const pathname = window.location.pathname;\n\n    const clickHandler = () => {\n        setClicked(!clicked)\n    }\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            const getdropDown = async () => {\n                let response;\n                let movies;\n                if (pathname === `/`) {\n                    response = await fetch(upcoming);\n                }\n                else if (pathname === `/${props.id}`) {\n                    response = await fetch(similarMovie);\n                }\n                else if (pathname === `/tv/${props.id}`) {\n                    response = await fetch(similarTv);\n                }\n                else {\n                    response = await fetch(tv)\n                }\n\n\n                movies = await response.json()\n                setData(movies.results)\n            }\n            getdropDown()\n        }\n    }, [pathname])\n\n\n\n    return (\n        <div className=\"recent\">\n            <div className=\"title\" onClick={clickHandler}>\n                <h2>{props.title}</h2>\n                <i className={clicked ? 'fas fa-caret-up rotate' : 'fas fa-caret-up'}></i>\n            </div>\n            <div className={clicked ? 'hidden recent-container' : 'recent-container'}>\n                <div className=\"recent-container_items\">\n                    {data.map((item, index) => {\n\n\n\n                        return (\n                            <Link to={{\n                                pathname: `${item.id}`\n                            }}\n                                className=\"recent-container_items--item\"\n                                key={index}>\n                                <div className=\"img\"\n                                    style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=${key}')` }}\n                                ></div>\n                                <div className=\"text\">\n                                    <h4>{item.title}</h4>\n                                    <MovieStats stat={item.vote_average} />\n                                </div>\n                            </Link>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown;","import React, { useState } from 'react';\n\nconst NewsLetter = props => {\n    const [key, setKey] = useState(false)\n\n    const keyPress = event => {\n        if (event.key === \"Enter\") {\n            setTimeout(() => {\n                setKey(true)\n            }, 1500)\n        }\n    }\n\n    return (\n        <div className=\"footer-newsletter\">\n            <h4 className={key ? 'show' : 'hide'}>Email confirmed. You will recieve our weekly newsletter</h4>\n            <a id=\"form-<%: Model.Form.FormGuid %>\"></a>\n            <form onKeyPress={keyPress} action=\"#form-<%: Model.Form.FormGuid %>\">\n                <input type=\"email\" placeholder=\"Your Email Address\" />\n            </form>\n\n            <p>Enter your email and receive the latest news, updates and special offers from us.</p>\n        </div>\n    )\n}\n\n\nexport default NewsLetter;","import React from 'react';\n\n\nconst Legal = () => {\n\n    return (\n        <div className=\"footer-legal\">\n            <div className=\"footer-legal_social\">\n                <ul>\n                    <li><i className=\"fab fa-facebook-f\"></i></li>\n                    <li><i className=\"fab fa-linkedin-in\"></i></li>\n                    <li><i className=\"fab fa-twitter\"></i></li>\n                    <li><i className=\"fab fa-google-plus-g\"></i></li>\n                </ul>\n            </div>\n            <div className=\"footer-legal_text\">\n                <p>© 2020 ProShowz. All rights reserved | Designed by W3layouts</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Legal;","import React, { useState } from 'react';\nimport Nav from '../Header/Nav';\nimport NewsLetter from '../Footer/NewsLetter';\nimport Legal from './Legal';\n\n\nconst Footer = ({ userData }) => {\n    const [footerMenu, setFooterMenu] = useState(false)\n\n\n    const footerClickHandler = () => {\n        setFooterMenu(!footerMenu)\n    }\n\n    return (\n        <div className=\"footer\">\n            <h2>Information</h2>\n            <Nav userData={userData} footerMenu={footerClickHandler} state={footerMenu} />\n            <NewsLetter />\n            <Legal />\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\n\n\nconst MovieRating = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const id = props.id;\n    const [click, setClick] = useState(false);\n    const [starsSelected, setStarsSelected] = useState(0);\n    const [token, setToken] = useState('');\n    const [ratingText, setRatingText] = useState(false)\n    const pathname = window.location.pathname;\n\n\n    const clickHandler = () => {\n        setClick(!click);\n    }\n\n    useEffect(() => {\n        const fetchToken = async () => {\n            const response = await fetch(`https://api.themoviedb.org/3/authentication/guest_session/new?api_key=${key}`);\n            const token = await response.json()\n            setToken(token.guest_session_id)\n        };\n        fetchToken();\n    }, [])\n\n\n\n\n    const submitHandler = async () => {\n\n        setTimeout(() => {\n            setRatingText(!ratingText)\n            setTimeout(() => {\n                setClick(!click);\n            }, 2000)\n        }, 1000)\n    }\n\n\n\n    const change = (starsSelected) => {\n        setStarsSelected(starsSelected)\n    }\n    let button;\n    if (starsSelected === 0) {\n        button = <h3>Rate movie</h3>\n    }\n    else if (starsSelected < 6) {\n        button = <h3>Eh, seen better</h3>\n    }\n    else if (starsSelected < 9) {\n        button = <h3>Great movie</h3>\n    }\n    else {\n        button = <h3>Masterpiece!</h3>\n    }\n\n    return (\n        <a className=\"rating\">\n            <h3 className={click === true ? \"rating-btn rating-btn_active\" : 'rating-btn'} onClick={clickHandler}>{pathname === `/tv/${id}` ? 'Rate show' : 'Rate Movie'}<i className={click ? \"fas fa-star\" : \"fas fa-star active\"}></i></h3>\n\n            <div className={click ? 'rating-container rating-active' : 'rating-container'}>\n                {button}\n                <div className=\"stars\">\n                    {[...Array(props.totalStars)].map((n, i) => (\n\n                        <i\n                            key={i}\n                            onClick={() => change(i + 1)}\n                            className={i < starsSelected ? 'fas fa-star' : 'far fa-star'}\n                        ></i>\n\n                    ))}\n                </div>\n\n                <button className={ratingText ? 'btn btn-active' : 'btn'} onClick={submitHandler} type=\"submit\">{ratingText ? 'Thanks!' : 'Submit'}</button>\n            </div>\n        </a>\n    )\n}\n\nexport default MovieRating;\n\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport MovieStats from '../MovieStats';\nimport Dropdown from '../Dropdown/Dropdown';\nimport MovieRating from '../MovieRating';\n\nconst SingleMovie = (props) => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const id = props.match.params.id;\n    const [clicked, setClicked] = useState(false)\n    const [data, setData] = useState({\n        genres: [],\n        seasons: []\n    });\n    const tvUrl = `https://api.themoviedb.org/3/tv/${id}?api_key=${key}&language=en-US&`;\n    const movieUrl = `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`;\n    const pathname = window.location.pathname;\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        let mounted = true;\n        if (mounted) {\n            const fetchData = async () => {\n                const response = await fetch(pathname === `/${id}` ? movieUrl : tvUrl);\n                const movies = await response.json()\n                setData(movies)\n            };\n            fetchData();\n        }\n        return () => {\n            mounted = false;\n        }\n    }, [pathname, id]);\n\n\n\n\n\n\n\n    // Converting movie runtime from minutes into hours & minutes\n    const movieRuntime = (\n        <li>{Math.floor(data.runtime / 60)}h {data.runtime % 60}mins</li>\n    )\n    const tvRuntime = (\n        <li>{data.episode_run_time}mins</li>\n    )\n    //\n\n    // onClick for popularity star\n    const clickHandler = () => {\n        setClicked(!clicked)\n    }\n\n    // Mapping over movie genres\n    const movieGenres = (\n        data.genres.map(item => {\n            return <Link to={{ pathname: pathname.includes('/tv/') ? `/tv/genres/${item.name}` : `/genres/${item.name}` }} key={item.id}>{item.name}, </Link>\n        })\n    )\n\n\n    if (pathname === `/${id}`) {\n        return (\n            <>\n\n                <div className=\"single-movie\" >\n                    <h2>{data.title}</h2>\n                    <ul className=\"single-movie_info container\">\n                        <li className=\"popularity\"><i onClick={clickHandler} className={clicked ? 'pulse-active fas fa-star' : 'fas fa-star'}></i>{parseInt(data.popularity)}</li>\n                        <li>{movieGenres}</li>\n                        {pathname === `/${id}` ? movieRuntime : tvRuntime}\n                        <li>{data.release_date}</li>\n                    </ul>\n                    <div className=\"single-movie_img\"\n                        style={{ background: `url('https://image.tmdb.org/t/p/original${data.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                    >\n                    </div>\n                    <div className=\"single-movie_text container\">\n                        <MovieStats stat={data.vote_average} />\n                        <h3>{data.tagline}</h3>\n                        <p>{data.overview}</p>\n\n                        <div className=\"single-movie_text-links\">\n                            <a className=\"watch-now\" href={data.homepage} target=\"_blank\">Watch Now</a>\n                            <MovieRating id={id} totalStars={10} />\n                        </div>\n                        <Dropdown title=\"Similar\" id={id} />\n                    </div>\n                </div >\n            </>\n        )\n    }\n    else {\n        return (\n            <>\n                <div className=\"single-movie\">\n                    <h2>{data.name}</h2>\n                    <ul className=\"single-movie_info container\">\n                        <li className=\"popularity\"><i onClick={clickHandler} className={clicked ? 'pulse-active fas fa-star' : 'fas fa-star'}></i>{parseInt(data.popularity)}</li>\n                        <li>{movieGenres}</li>\n                        {pathname === `/tv/${id}` ? movieRuntime : tvRuntime}\n                        <li>{data.first_air_date}</li>\n                    </ul>\n                    <div className=\"single-movie_img\"\n                        style={{ background: `url('https://image.tmdb.org/t/p/original${data.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                    >\n                    </div>\n                    <div className=\"single-movie_text container\">\n                        <MovieStats stat={data.vote_average} />\n                        <div className=\"single-movie_text-links\">\n                            <a className=\"watch-now\" href={data.homepage} target=\"_blank\">Watch Now</a>\n                            <MovieRating id={id} totalStars={10} />\n                        </div>\n                        <p>{data.overview}</p>\n                        <div className=\"single-movie_text-links\">\n                            {data.seasons.map((season, index) => {\n                                return <Link to={{\n                                    pathname: pathname.includes('/tv/')\n                                        ? `/tv/season/episode/${season.season_number}`\n                                        : `/season/episode/${season.season_number}`,\n                                    state: { id: data.id, seasonNumber: season.season_number }\n                                }}\n                                    value={season.season_number}>\n                                    Season {season.season_number === 0 ? 'Specials' : season.season_number}\n                                </Link>\n                            })}\n                        </div>\n                        <Dropdown title=\"Similar\" id={id} />\n                    </div>\n                </div >\n            </>\n        )\n    }\n}\n\nexport default SingleMovie;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Results = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [data, setData] = useState([]);\n    const query = props.title;\n    const tvUrl = `https://api.themoviedb.org/3/search/tv?api_key=${key}&language=en-US&page=1&query=${query}&include_adult=false`;\n    const movieUrl = `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`;\n    const pathname = window.location.pathname;\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            async function getGenreResults() {\n                const response = await fetch(pathname.includes('/tv/') ? tvUrl : movieUrl);\n                const movies = await response.json()\n                setData(movies.results)\n            }\n            getGenreResults()\n        }\n\n        return () => {\n            mounted = false;\n        }\n    }, [pathname, query])\n\n    return (\n        <div className=\"results\">\n            <h2>{props.title}</h2>\n            <div className=\"results-container\">\n                {data.map(item => {\n                    return (\n                        <Link to={{ pathname: pathname.includes('/tv/') ? `/tv/${item.id}` : `/${item.id}` }} className=\"results-container_item\"\n                            key={item.id}\n                            style={{ background: `url('https://image.tmdb.org/t/p/original${item.poster_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                        >\n                        </Link>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Results;\n\n","import React from 'react';\nimport Header from '../../Header/Header';\n\nconst Episode = props => {\n    const data = props.data;\n\n    return (\n        <>\n            <h2 className=\"season-title\">{data.name}</h2>\n            <div className=\"season-block\">\n                {data.episodes.map(episode => {\n                    return (\n                        <div className=\"season-block-container\" key={episode.id}>\n\n                            <h3>Episode: {episode.episode_number}</h3>\n                            <div className=\"season-block-container-img\"\n                                style={{ background: `url('https://image.tmdb.org/t/p/original${episode.still_path}?api_key=8672037f7713f0f454d73f60ab645f36')` }}\n                            ></div>\n                            <div className=\"season-block-container-text\">\n                                <h3>{episode.name}</h3>\n                                <p>{episode.overview}</p>\n                                <p>Air Date: {episode.air_date}</p>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </>\n    )\n\n}\n\nexport default Episode;","import React, { useState, useEffect } from 'react';\nimport EpisodeBlock from '../Episode/EpisodeBlock';\n\nconst Season = props => {\n    const key = '8672037f7713f0f454d73f60ab645f36';\n    const [data, setData] = useState({\n        episodes: []\n    });\n    const id = props.location.state.id;\n    const seasonNumber = props.location.state.seasonNumber;\n    const seasonsUrl = `https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}?api_key=${key}&language=en-US`;\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        let mounted = true;\n        if (mounted) {\n            const fetchSeasons = async () => {\n                const response = await fetch(seasonsUrl);\n                const seasons = await response.json()\n                setData(seasons)\n            };\n            fetchSeasons();\n        }\n        return () => {\n            mounted = false;\n        }\n    }, [])\n\n    return <EpisodeBlock key={data.id} data={data} />\n}\n\n\nexport default Season;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\n\n\nconst Register = (props) => {\n    const [error, setError] = useState('')\n    const [status, setStatus] = useState(\"\")\n    const [newUser, setNewUser] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    })\n\n    // To capture the target.values of each input\n    const onChangeHandler = e => {\n        const value = e.target.value\n        setNewUser({\n            ...newUser,\n            [e.target.name]: value,\n        })\n    }\n\n    // Register new user\n    const registerUser = async e => {\n        e.preventDefault();\n        await axios({\n            method: 'POST',\n            url: '/api/register',\n            data: JSON.stringify(newUser),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                setStatus('created')\n            }\n            return;\n        }).catch(err => {\n            setError(err.response)\n        })\n        setNewUser({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: ''\n        })\n    }\n\n    const signInPromt = () => {\n        if (status === \"created\") {\n            return <div>Account created!</div>\n        } else if (error.status !== 200) {\n            return <div>{error.data}</div>\n        }\n    }\n\n    useEffect(() => {\n        signInPromt()\n    }, [status])\n\n    return (\n        <div className=\"auth\">\n            <h2>Sign up</h2>\n            <form >\n                <input type=\"text\" name=\"firstName\" value={newUser.firstName} onChange={onChangeHandler} placeholder=\"First Name\" required />\n                <input type=\"text\" name=\"lastName\" value={newUser.lastName} onChange={onChangeHandler} placeholder=\"Last Name\" required />\n                <input type=\"email\" name=\"email\" value={newUser.email} onChange={onChangeHandler} placeholder=\"Email\" required />\n                <input type=\"password\" name=\"password\" value={newUser.password} onChange={onChangeHandler} placeholder=\"password\" required />\n                <input type=\"submit\" onClick={registerUser} className=\"submit\" />\n                {signInPromt()}\n            </form>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useState, useCallback } from 'react';\nimport axios from 'axios'\nimport { withRouter, useHistory } from \"react-router-dom\";\n\n\n\n\n\nconst Login = (props) => {\n    const [loginText, setLoginText] = useState({\n        email: '',\n        password: ''\n    })\n    const [error, setError] = useState(0)\n    const [status, setStatus] = useState(\"\")\n    const history = useHistory()\n    const userActive = props.userData.status === 200;\n\n    const onChangeHandler = e => {\n        const value = e.target.value;\n        const name = e.target.name;\n        setLoginText({\n            ...loginText,\n            [name]: value,\n        })\n    }\n\n    // Login user\n    const loginUser = async e => {\n        e.preventDefault();\n\n        const login = await axios({\n            method: 'POST',\n            url: '/api/login',\n            data: JSON.stringify(loginText),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                setStatus('success')\n                props.setUserData(res)\n                props.setAuthenticated(true)\n            }\n        }).catch(err => {\n            setError(err.response)\n        })\n        setLoginText({\n            email: '',\n            password: ''\n        })\n    }\n\n    // Login message\n    const loginPromt = () => {\n        if (status === 'success') {\n            setTimeout(() => {\n                props.history.push('/')\n            }, 500)\n        } else if (error.status !== 200) {\n            return <div>{error.data}</div>\n        } return <div></div>\n    }\n\n    return (\n        <div style={{ display: userActive ? 'none' : 'block' }}>\n            <h2>{userActive ? 'Sign Out' : 'Sign in'}</h2>\n            <form>\n                <input type=\"email\" name=\"email\" value={loginText.email} onChange={onChangeHandler} placeholder=\"Email\" required />\n                <input type=\"password\" name=\"password\" value={loginText.password} onChange={onChangeHandler} placeholder=\"password\" required />\n                <input type=\"submit\" placeholder=\"Create account\" className=\"submit\" onClick={loginUser} />\n                {loginPromt()}\n            </form>\n        </div>\n    )\n};\n\nexport default withRouter(Login);","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from './Header/Header';\nimport Slide from './Slider/Slide';\nimport PopularMovies from './PopularMovies/PopularMovies';\nimport Slider2 from './Slider2/Slider2';\nimport Dropdown from './Dropdown/Dropdown';\nimport Footer from './Footer/Footer';\nimport DetailsPage from './DetailsPage/DetailsPage';\nimport Results from './ResultsPage/Results';\nimport Seasons from './DetailsPage/SingleSeason/Season';\nimport Episode from './DetailsPage/Episode/EpisodeBlock';\nimport Register from './auth/Register';\nimport Login from './auth/Login';\nimport './App.css';\n\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false)\n  const [userData, setUserData] = useState({\n    status: 0\n  })\n\n  const logoutHandler = () => {\n    setAuthenticated(!authenticated)\n    setUserData({ status: 0 })\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header userData={userData} authenticated={authenticated} logoutHandler={logoutHandler} />\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Slide />\n            <PopularMovies title=\"Popular Movies\" />\n            <Slider2 title=\"New Releases\" />\n            <Dropdown title=\"Recent Movies\" />\n          </Route>\n\n          <Route exact path=\"/tv/\">\n            <Slide />\n            <PopularMovies title=\"Popular Shows\" />\n            <Slider2 title=\"Top Rated\" />\n            <Dropdown title=\"More\" />\n          </Route>\n\n          <Route exact path=\"/api/account\">\n            <div className=\"auth\">\n              <Login setAuthenticated={setAuthenticated} setUserData={setUserData} userData={userData} />\n              <Register />\n            </div>\n          </Route>\n\n          <Route exact path=\"/:id\" component={DetailsPage} />\n          <Route exact path=\"/tv/:id\" component={DetailsPage} />\n\n          <Route exact path=\"/genres/:genre\" render={(props) => (<Results title={props.match.params.genre} />)} />\n          <Route path=\"/tv/genres/:genre\" render={(props) => (<Results title={props.match.params.genre} />)} />\n\n          <Route path=\"/tv/season/:episode\" component={Seasons} />\n          <Route path=\"/tv/season/episode/:id\" component={Episode} />\n        </Switch>\n        <Footer userData={userData} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}